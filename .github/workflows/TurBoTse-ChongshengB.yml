
name: ChongshengB_Padavan_TurBoTse

on:
  workflow_dispatch: 
  release:
    types: [published]
  watch:           
    types: [started]  
env:
  build_dir: /opt/rt-n56u                                       # 源码目录
  images_dir: /opt/images                                       # 固件目录
  work_dir: /opt/rt-n56u/trunk                                  # 工作目录 
  src_git: https://github.com/chongshengB/rt-n56u.git           # 源码地址
  config_dir: /opt/rt-n56u/trunk/configs/templates              # 设备模板目录
  toolchain_dir: /opt/rt-n56u/toolchain-mipsel/toolchain-3.4.x  # 工具链目录
  toolchain_pkg: mipsel-linux-uclibc.tar.xz
  toolchain_url: https://github.com/TurBoTse/padavan-toolchain/releases/download/v1.0
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id  # 自己点的 Star
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7620"
            targets: "PSG1208 PSG1218 NEWIFI-MINI MI-MINI MI-3 OYE-001 5K-W20"
          - build_variant: "mt7621"
            targets: "K2P-5.0 DIR-878-5.0 RM2100 R2100"
          - build_variant: "mt7621-usb-1"
            targets: "A3004NS MSG1500 WR1200JS E8820V2 NEWIFI3 RT-AC1200GU"
          - build_variant: "mt7621-usb-2"
            targets: "JCG-836PRO-5.0 JCG-AC860M-5.0 JCG-Y2-5.0 DIR-882-5.0 MI-R3G B70"
          - build_variant: "mt7628"
            targets: "360P2 HC5861B HC5761A HC5661A MI-NANO MZ-R13 MZ-R13P"
    steps:
      - name: Checkout main            # 导入主分支
        uses: actions/checkout@v2
        
      - name: Prepare environment      # 准备编译环境
        run: |                         # 安装依赖包
          sudo apt update
          sudo apt install libtool-bin gperf python-docutils autopoint gettext
          sudo timedatectl set-timezone 'Asia/Shanghai'  # 设置时区
          
      - name: Clone source code                 # 克隆源码
        run: |                         
          git clone --depth=1 $src_git $build_dir
          cd $build_dir
          
      - name: Prepare toolchain                 # 下载预编译的构建工具链
        run: |                         
          # cd $build_dir/toolchain-mipsel
          # sh dl_toolchain.sh
          mkdir -p $toolchain_dir && mkdir -p $images_dir
          curl -LO ${toolchain_url}/${toolchain_pkg}
          tar -xf $toolchain_pkg -C $toolchain_dir
          
      - name: Start build
        run: |
          cd /opt/rt-n56u/trunk
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx ${images_dir}/$m.trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
          
      - name: Upload images to Artifact
        #if: ${{ success() }}
        uses: actions/upload-artifact@v2.2.1
        with:
          name: padavan_${{ env.build_variant }}
          path: ${{ env.images_dir }}
          
      - name: Upload images to CowTransfer
        if: env.upload_cowtransfer == 'true' && success()
        run: |                         # 上传到奶牛快传
          curl -fsSL git.io/file-transfer | sh
          ./transfer cow --block 2621440 -s -p 64 --no-progress ${images_dir} 2>&1 | tee cowtransfer.log
          echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
          
      - name: Upload images to WeTransfer
        if: env.upload_wetransfer == 'true' && success()
        run: |                         # 上传到 WeTransfer
          curl -fsSL git.io/file-transfer | sh
          ./transfer wet -s -p 16 --no-progress ${images_dir} 2>&1 | tee wetransfer.log
          echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
          
      - name: Upload images to Releases
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.images_dir }}/*.trx
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
