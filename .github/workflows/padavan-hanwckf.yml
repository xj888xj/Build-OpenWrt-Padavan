
name: Padavan-Hanwckf

on:
  workflow_dispatch:        # Actions按Run workflow启动编译
  release:                  # 创建release启动编译                                    
    types: [published]
  watch:                    # 点击Star启动编译                                    
    types: [started]
    
env: 
  images_dir: /opt/images                                       # 固件目录
  build_dir: /opt/rt-n56u                                       # 源码目录
  work_dir: /opt/rt-n56u/trunk                                  # 工作目录
  config_dir: /opt/rt-n56u/trunk/configs/templates              # 设备模板目录
  src_git: https://github.com/hanwckf/rt-n56u.git               # 源码地址  

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}     
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7620"
            targets: "PSG1208 PSG1218 NEWIFI-MINI MI-MINI MI-3 OYE-001 5K-W20"
          - build_variant: "mt7621"
            targets: "K2P_nano K2P DIR-878 RM2100 CR660x"
          - build_variant: "mt7621-usb"
            targets: "XY-C1 JCG-836PRO JCG-AC860M JCG-Y2 DIR-882 A3004NS MSG1500 WR1200JS MI-R3G NEWIFI3 B70"
          - build_variant: "mt7628"
            targets: "HC5861B MI-NANO MZ-R13 MZ-R13P 360P2 HC5761A HC5661A"
    steps:
      - name: Checkout main            
        uses: actions/checkout@v2
      - name: Prepare environment      
        run: |                         
          sudo apt update
          sudo apt install libtool-bin gperf python-docutils autopoint gettext                         
          sudo git clone --depth=1 $src_git $build_dir
          cd $build_dir/toolchain-mipsel
          sudo sh dl_toolchain.sh
          #sudo ./clean_toolchain
          #sudo ./build_toolchain
          sudo mkdir -p $images_dir
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'yes' }}
        with:
          limit-access-to-actor: true
      - name: Start build firmware
        run: | 
          cd $work_dir
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx $images_dir/Hanwckf_${m}_$(date +%Y%m%d).trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done          
      - name: Upload images to Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: padavan_${{ env.build_variant }}
          path: ${{ env.images_dir }}
      - name: Upload images to Releases
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.images_dir }}/*.trx
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true    

