name: padavan-hanwckf
 
on:
  workflow_dispatch:        
  release:                                                     
    types: [published]
  watch:                                                        
    types: [started] 

jobs:
  build:
    name: build padavan
    runs-on: ubuntu-latest
    if: ${{ !(github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
      images_dir: /opt/images
    strategy:
      matrix:
        include:
          - build_variant: "mt7620"
            targets: "PSG1208 PSG1218 NEWIFI-MINI MI-MINI MI-3 OYE-001 5K-W20"
          - build_variant: "mt7628"
            targets: "HC5861B MI-NANO MZ-R13 MZ-R13P 360P2 HC5761A HC5661A"
          - build_variant: "mt7621"
            targets: "K2P_nano K2P DIR-878 RM2100 CR660x"
          - build_variant: "mt7621-usb"
            targets: "XY-C1 JCG-836PRO JCG-AC860M JCG-Y2 DIR-882 A3004NS MSG1500 WR1200JS MI-R3G NEWIFI3 B70"
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: |
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext
          sudo git clone --depth=1 https://github.com/hanwckf/rt-n56u.git /opt/rt-n56u
          cd /opt/rt-n56u/trunk
          sudo sh ./tools/shellcheck.sh
          cd /opt/rt-n56u/toolchain-mipsel
          sudo sh dl_toolchain.sh
          #sudo ./clean_toolchain
          #sudo ./build_toolchain 
          
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled == 'yes' }}
        with:
          limit-access-to-actor: true
          
      - name: Start build
        run: |
          cd /opt/rt-n56u/trunk
          mkdir -p ${images_dir}
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx ${images_dir}/$m.trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
          
      - name: Create archive
        run: |
          ls -lh ${images_dir}
          GIT_VERSION=`git rev-parse --short=7 HEAD 2>/dev/null` && [ -n "$GIT_VERSION" ] && \
          image_name=images_${build_variant}_${GIT_VERSION} || image_name=images_${build_variant}
          cd ${images_dir}; md5sum *.trx |tee md5sum.txt; 7z a -mx=9 ${image_name}.7z ./*
          echo "image_name=${image_name}" >> $GITHUB_ENV
          
      - name: Upload images to Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: ${{ env.image_name }}
          path: ${{ env.images_dir }}/*.7z
          
      - name: Upload images to Releases
        uses: svenstaro/upload-release-action@2.2.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.images_dir }}/*.trx
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
